<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>hello,Hexo</title>
      <link href="/2018/08/27/hello-Hexo/"/>
      <url>/2018/08/27/hello-Hexo/</url>
      <content type="html"><![CDATA[<p>#github+hexo搭建个人博客</p><blockquote><p>安装准备<br>环境搭建：</p></blockquote><p>node.js：<a href="https://nodejs.org/en/" title="https://nodejs.org/en/" target="_blank" rel="noopener">下载地址https://nodejs.org/en/</a><br>git：<a href="https://git-scm.com/download/win" title="下载地址https://git-scm.com/download/win" target="_blank" rel="noopener">下载地址https://git-scm.com/download/win</a><br>sublime：<a href="http://www.sublimetext.com/2" title="下载地址http://www.sublimetext.com/2" target="_blank" rel="noopener">下载地址http://www.sublimetext.com/2</a></p><ol><li>安装node<br>到 node.js 官网下载相应平台的 最新版本 ，一路安装即可。我用的是 node-v0.10.22-x86.msi</li><li>安装git<br>git的客户端很多，我用的是 msysgit ，喜欢用绿色版本 portable application for official git for windows 1.8.4 ，下载下来设置一下环境变量即可，git_home，%git_home%\bin之类的，不多说。</li><li>安装sublime<br>sublime text 2 在这里仅仅作为一个文本编辑器使用，支持各种编程语言和文件格式，当然也支持markdown语法，实在是个不可多得的练码奇才。喜欢追鲜的也可以尝试处于beta版本的 sublime text 3 。<br>##一：配置和使用Github<br>Git是版本管理的未来，他的优点我不再赘述，相关资料很多。推荐这本Git中文教程。</li></ol><p>要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。Windows版的下载地址在这里：<a href="http://code.google.com/p/msysgit/downloads/list。其他系统的安装也可以参考官方的安装教程。" target="_blank" rel="noopener">http://code.google.com/p/msysgit/downloads/list。其他系统的安装也可以参考官方的安装教程。</a></p><p>下载安装客户端之后，各个系统的配置就类似了，我们使用windows作为例子，Linux和Mac与此类似。</p><p>在Windows下，打开Git Bash，其他系统下面则打开终端（Terminal）： Git Bash<br><img src="https://i.imgur.com/uAJC73Z.png" alt=""></p><h3 id="1-检查SSH-keys的设置"><a href="#1-检查SSH-keys的设置" class="headerlink" title="1.检查SSH keys的设置"></a>1.检查SSH keys的设置</h3><p>首先我们需要检查你电脑上现有的ssh key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果显示“No such file or directory”，跳到第三步，否则继续。</span><br></pre></td></tr></table></figure><h3 id="2-备份和移除原来的ssh-key设置："><a href="#2-备份和移除原来的ssh-key设置：" class="headerlink" title="2. 备份和移除原来的ssh key设置："></a>2. 备份和移除原来的ssh key设置：</h3><p>因为已经存在key文件，所以需要备份旧的数据并删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">configid_rsaid_rsa.pubknown_hosts</span><br><span class="line">$ mkdir key_backup</span><br><span class="line">$ cp id_rsa* key_backup</span><br><span class="line">$ rm id_rsa*</span><br></pre></td></tr></table></figure><h3 id="3-生成新的SSH-Key："><a href="#3-生成新的SSH-Key：" class="headerlink" title="3. 生成新的SSH Key："></a>3. 生成新的SSH Key：</h3><p>输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br><span class="line">然后系统会要你输入加密串（Passphrase）：</span><br><span class="line"></span><br><span class="line">Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zMqh0gF.png" alt=""><br>最后看到这样的界面，就成功设置ssh key了： ssh key success</p><h3 id="4-添加SSH-Key到GitHub："><a href="#4-添加SSH-Key到GitHub：" class="headerlink" title="4. 添加SSH Key到GitHub："></a>4. 添加SSH Key到GitHub：</h3><p>在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。</p><p>用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在GitHub的主页上点击设置按钮： github account setting</span><br><span class="line"></span><br><span class="line">选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可： set ssh keys</span><br></pre></td></tr></table></figure><p>PS：如果需要配置多个GitHub账号，可以参看这个多个github帐号的SSH key切换，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令git config –global –unset user.email删除用户账户设置，在每一个repo下面使用git config –local user.email ‘你的github邮箱@mail.com’ 命令单独设置用户账户信息</p><h3 id="5-测试一下"><a href="#5-测试一下" class="headerlink" title="5. 测试一下"></a>5. 测试一下</h3><p>可以输入下面的命令，看看设置是否成功，<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>的部分不要修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果是下面的反应：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br><span class="line">不要紧张，输入yes就好，然后会看到：</span><br><span class="line"></span><br><span class="line">Hi &lt;em&gt;username&lt;/em&gt;! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h3 id="6-设置你的账号信息"><a href="#6-设置你的账号信息" class="headerlink" title="6. 设置你的账号信息"></a>6. 设置你的账号信息</h3><p>现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。</p><p>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的名字&quot;</span><br><span class="line">$ git config --global user.email &quot;your_email@youremail.com==&quot;==8/29/2018 12:03:12 PM</span><br></pre></td></tr></table></figure><p>成功了<br>好了，你已经可以成功连接GitHub了。</p><p>##二：使用GitHub Pages建立博客<br>与GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。</p><p>###GitHub Pages是什么<br>应用GitHub Pages创建属于自己的个人博客，GitHub将提供免费的空间。GitHub提供的域名（用户名+github+io）,在Repository name对应处填写资源名，其需要使用自己的用户名，每个用户名下面只能建立一个，并且资源命名必须符合这样的规则username/username.github.io，之后勾选下面的”Initialize this repository with a README” 。</p><p>###以下为cmd 命令行输入操作方式，详情可看官方操作，不作详细描述<br>官方文档：<a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a><br><img src="https://i.imgur.com/UUQ1r8H.png" alt=""><br><img src="https://i.imgur.com/BPjOtNx.png" alt=""><br><img src="https://i.imgur.com/UdbgKYA.png" alt=""><br><img src="https://i.imgur.com/phRibG6.png" alt=""><br><img src="https://i.imgur.com/O28sAD1.png" alt=""></p><p>###注意事项</p><p>参考文章：</p><ol><li><a href="https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/" title="https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/" target="_blank" rel="noopener">使用GitHub搭建Hexo博客  作者:世平阜康https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/</a></li><li><a href="http://beiyuu.com/github-pages" title="http://beiyuu.com/github-pages" target="_blank" rel="noopener">使用Github Pages建独立博客 http://beiyuu.com/github-pages</a></li><li><a href="https://blog.csdn.net/qq_32454537/article/details/79482896" title="https://blog.csdn.net/qq_32454537/article/details/79482896" target="_blank" rel="noopener">2018最新版Hexo博客Next主题6.0配置优化https://blog.csdn.net/qq_32454537/article/details/79482896</a></li><li><a href="https://blog.csdn.net/qq_27093465/article/details/72954725" title="https://blog.csdn.net/qq_27093465/article/details/72954725" target="_blank" rel="noopener">HEXO安装(Win7 64 bit )，遇到cmd报错https://blog.csdn.net/qq_27093465/article/details/72954725</a></li></ol>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/27/hello-world/"/>
      <url>/2018/08/27/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
